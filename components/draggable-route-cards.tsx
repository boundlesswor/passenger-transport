"use client"
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { MapPin, Clock, Users, ArrowRight } from "lucide-react"
import Link from "next/link"

const routes = [
  {
    id: "germany",
    country: "–ì–µ—Ä–º–∞–Ω–∏—è",
    flag: "üá©üá™",
    code: "DE",
    route: "–ö–∏–µ–≤ ‚Üí –í–∞—Ä—à–∞–≤–∞ ‚Üí –ë–µ—Ä–ª–∏–Ω/–ú—é–Ω—Ö–µ–Ω/–§—Ä–∞–Ω–∫—Ñ—É—Ä—Ç",
    duration: "18-24 —á–∞—Å–∞",
    frequency: "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ",
    description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏ –≤ –ì–µ—Ä–º–∞–Ω–∏—é —Å –ø–µ—Ä–µ—Å–∞–¥–∫–æ–π –≤ –í–∞—Ä—à–∞–≤–µ",
    stops: ["–ö–∏–µ–≤", "–í–∞—Ä—à–∞–≤–∞", "–ë–µ—Ä–ª–∏–Ω"],
    color: "from-yellow-500/20 to-red-500/20",
  },
  {
    id: "poland",
    country: "–ü–æ–ª—å—à–∞",
    flag: "üáµüá±",
    code: "PL",
    route: "–ö–∏–µ–≤ ‚Üí –í–∞—Ä—à–∞–≤–∞/–ö—Ä–∞–∫–æ–≤/–ì–¥–∞–Ω—å—Å–∫",
    duration: "12-16 —á–∞—Å–æ–≤",
    frequency: "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ",
    description: "–ü—Ä—è–º—ã–µ —Ä–µ–π—Å—ã –≤ –∫—Ä—É–ø–Ω–µ–π—à–∏–µ –≥–æ—Ä–æ–¥–∞ –ü–æ–ª—å—à–∏",
    stops: ["–ö–∏–µ–≤", "–í–∞—Ä—à–∞–≤–∞"],
    color: "from-red-500/20 to-white/20",
  },
  {
    id: "baltics",
    country: "–ü—Ä–∏–±–∞–ª—Ç–∏–∫–∞",
    flag: "üá±üáπ",
    code: "LT",
    route: "–ö–∏–µ–≤ ‚Üí –í–∞—Ä—à–∞–≤–∞ ‚Üí –í–∏–ª—å–Ω—é—Å/–†–∏–≥–∞/–¢–∞–ª–ª–∏–Ω",
    duration: "16-20 —á–∞—Å–æ–≤",
    frequency: "3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é",
    description: "–ú–∞—Ä—à—Ä—É—Ç—ã –≤ –õ–∏—Ç–≤—É, –õ–∞—Ç–≤–∏—é –∏ –≠—Å—Ç–æ–Ω–∏—é",
    stops: ["–ö–∏–µ–≤", "–í–∞—Ä—à–∞–≤–∞", "–í–∏–ª—å–Ω—é—Å"],
    color: "from-green-500/20 to-yellow-500/20",
  },
  {
    id: "belarus",
    country: "–ë–µ–ª–∞—Ä—É—Å—å",
    flag: "üáßüáæ",
    code: "BY",
    route: "–ö–∏–µ–≤ ‚Üí –ú–∏–Ω—Å–∫",
    duration: "8-10 —á–∞—Å–æ–≤",
    frequency: "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ",
    description: "–ü—Ä—è–º—ã–µ —Ä–µ–π—Å—ã –≤ –ú–∏–Ω—Å–∫",
    stops: ["–ö–∏–µ–≤", "–ú–∏–Ω—Å–∫"],
    color: "from-green-500/20 to-red-500/20",
  },
  {
    id: "russia",
    country: "–†–æ—Å—Å–∏—è",
    flag: "üá∑üá∫",
    code: "RU",
    route: "–ö–∏–µ–≤ ‚Üí –í–∞—Ä—à–∞–≤–∞ ‚Üí –ú–∏–Ω—Å–∫ ‚Üí –ú–æ—Å–∫–≤–∞",
    duration: "24-30 —á–∞—Å–æ–≤",
    frequency: "2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é",
    description: "–ú–∞—Ä—à—Ä—É—Ç –≤ –ú–æ—Å–∫–≤—É —Å –ø–µ—Ä–µ—Å–∞–¥–∫–∞–º–∏",
    stops: ["–ö–∏–µ–≤", "–í–∞—Ä—à–∞–≤–∞", "–ú–∏–Ω—Å–∫", "–ú–æ—Å–∫–≤–∞"],
    color: "from-blue-500/20 to-red-500/20",
  },
  {
    id: "return",
    country: "–û–±—Ä–∞—Ç–Ω—ã–µ —Ä–µ–π—Å—ã",
    flag: "üîÑ",
    code: "‚Ü©",
    route: "–ò–∑ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω—ã –ï–° ‚Üí –ö–∏–µ–≤",
    duration: "–†–∞–∑–ª–∏—á–Ω–∞—è",
    frequency: "–ü–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é",
    description: "–û–±—Ä–∞—Ç–Ω—ã–µ —Ä–µ–π—Å—ã –∏–∑ –≤—Å–µ—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –ö–∏–µ–≤",
    stops: ["–õ—é–±–æ–π –≥–æ—Ä–æ–¥ –ï–°", "–ö–∏–µ–≤"],
    color: "from-purple-500/20 to-blue-500/20",
  },
]

export function DraggableRouteCards() {
  return (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {routes.map((route, index) => (
        <div key={route.id} className="opacity-0 animate-fade-in-up" style={{ animationDelay: `${index * 0.1}s` }}>
          <Card
            className={`holo-glass h-full hover:neon-glow hover:scale-105 transition-all duration-500 bg-gradient-to-br ${route.color}`}
          >
            <CardContent className="p-6 space-y-4">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <span className="text-3xl hidden md:inline">{route.flag}</span>
                  <span className="text-lg font-bold text-primary bg-primary/20 px-2 py-1 rounded md:hidden">
                    {route.code}
                  </span>
                  <h3 className="text-xl font-bold font-space-grotesk text-foreground">{route.country}</h3>
                </div>
              </div>

              <div className="space-y-3">
                <div className="flex items-start gap-2">
                  <MapPin className="w-4 h-4 text-primary mt-1 flex-shrink-0" />
                  <span className="text-sm text-muted-foreground">{route.route}</span>
                </div>

                <div className="flex items-center gap-4 text-sm text-muted-foreground">
                  <div className="flex items-center gap-1">
                    <Clock className="w-4 h-4 text-primary" />
                    <span>{route.duration}</span>
                  </div>
                  <div className="flex items-center gap-1">
                    <Users className="w-4 h-4 text-primary" />
                    <span>{route.frequency}</span>
                  </div>
                </div>

                <p className="text-sm text-muted-foreground">{route.description}</p>

                <div className="flex flex-wrap gap-1">
                  {route.stops.map((stop, i) => (
                    <div key={stop} className="flex items-center">
                      <span className="text-xs bg-primary/20 text-primary px-2 py-1 rounded">{stop}</span>
                      {i < route.stops.length - 1 && <ArrowRight className="w-3 h-3 text-muted-foreground mx-1" />}
                    </div>
                  ))}
                </div>
              </div>

              <Link
                href={
                  route.id === "return" ? `/order?return=true` : `/order?country=${encodeURIComponent(route.country)}`
                }
              >
                <Button className="w-full bg-primary/80 hover:bg-primary text-primary-foreground">
                  {route.id === "return" ? "–í—ã–±—Ä–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—ã–π —Ä–µ–π—Å" : "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"}
                </Button>
              </Link>
            </CardContent>
          </Card>
        </div>
      ))}
    </div>
  )
}
